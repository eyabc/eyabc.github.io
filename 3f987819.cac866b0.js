(window.webpackJsonp=window.webpackJsonp||[]).push([[113],{183:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"metadata",(function(){return c})),t.d(n,"toc",(function(){return i})),t.d(n,"default",(function(){return d}));var o=t(3),r=t(7),l=(t(0),t(482)),a={title:"Jooq Tricks"},c={unversionedId:"java/jooq/jooq_tricks",id:"java/jooq/jooq_tricks",isDocsHomePage:!1,title:"Jooq Tricks",description:"3.11.9 \ubc84\uc804\uc73c\ub85c \uc791\uc131\ub418\uc5c8\uc2b5\ub2c8\ub2e4.",source:"@site/docs/java/jooq/jooq_tricks.mdx",slug:"/java/jooq/jooq_tricks",permalink:"/docs/java/jooq/jooq_tricks",version:"current",lastUpdatedAt:1658155721,sidebar:"java",previous:{title:"Map",permalink:"/docs/java/data_structure/Map"},next:{title:"transient fields \uc784\uc2dc \ud544\ub4dc",permalink:"/docs/java/transient_fields"}},i=[{value:"\uc608\uc81c",id:"\uc608\uc81c",children:[]},{value:"selector, join on, condition \ub098\ub204\uae30",id:"selector-join-on-condition-\ub098\ub204\uae30",children:[]},{value:"\uc5ec\ub7ec \ud14c\uc774\ube14\uc758 \uceec\ub7fc\uc744 \uac00\uc9c0\uace0 \uc788\ub294 Record \ub97c Pojo \uac1d\uccb4\ub85c \ubc14\uc778\ub529\ud558\uae30",id:"\uc5ec\ub7ec-\ud14c\uc774\ube14\uc758-\uceec\ub7fc\uc744-\uac00\uc9c0\uace0-\uc788\ub294-record-\ub97c-pojo-\uac1d\uccb4\ub85c-\ubc14\uc778\ub529\ud558\uae30",children:[]}],s={toc:i};function d(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(o.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(l.b)("p",null,"3.11.9 \ubc84\uc804\uc73c\ub85c \uc791\uc131\ub418\uc5c8\uc2b5\ub2c8\ub2e4."),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},"BaseRepository \ucd94\uc0c1 \ud074\ub798\uc2a4\ub97c \uacf5\ud1b5\uc73c\ub85c \ud655\uc7a5\ud569\ub2c8\ub2e4.")),Object(l.b)("p",null,"JPA \uc758 ",Object(l.b)("inlineCode",{parentName:"p"},"findById")," \ucc98\ub7fc \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc744\uae4c \uace0\ubbfc\ud558\uc600\uc2b5\ub2c8\ub2e4."),Object(l.b)("p",null,"\ud14c\uc2a4\ud2b8\ucf54\ub4dc\uc5d0\uc11c,\nBaseRepository \ub97c \ud655\uc7a5\ud55c Repository Map \uc744 \uc8fc\uc785\ubc1b\uc544 \uac00\uc838\uc628 \ub2e4\uc74c, truncate \uba54\uc11c\ub4dc\ub97c\n\uc2e4\ud589\uc2dc\ucf1c\uc8fc\uae30 \uc704\ud574 BaseRepository \ub97c \uc0dd\uc131\ud558\uac8c \ub418\uc5c8\uc2b5\ub2c8\ub2e4."),Object(l.b)("p",null,"\ud14c\uc774\ube14\ucd5c\uc801\ud654\ub97c \uc704\ud55c \uc791\uc5c5\uc73c\ub85c \ud14c\uc774\ube14 \uc774\ub984\uc774 \ubcc0\uacbd\ub418\uc5c8\uc744 \uacbd\uc6b0, \ucf54\ub4dc\uc758 \ub9ce\uc740 \ubd80\ubd84\uc744 \ubcc0\uacbd\ud574 \uc8fc\uc5c8\uc5b4\uc57c \ud588\uc2b5\ub2c8\ub2e4.\n\uc81c\ub108\ub9ad \ud074\ub798\uc2a4\ub97c ",Object(l.b)("inlineCode",{parentName:"p"},"class BaseRepository<T extends Table>")," \uc0ac\uc6a9\ud558\uc5ec \ucd94\uc0c1 \uba64\ubc84 \ubcc0\uc218\uc5d0 ",Object(l.b)("inlineCode",{parentName:"p"},"public final T TABLE;"),"\n\uc744 \uc120\uc5b8\ud558\uace0, \ud655\uc7a5\ud558\ub294 \ud074\ub798\uc2a4\uc5d0\uc11c ",Object(l.b)("inlineCode",{parentName:"p"},"public class TableDaoJooqImpl extends BaseRepository<JTable, JTableRecord>"),"\n\uc81c\ub108\ub9ad \ud0c0\uc785\ub9cc \ubcc0\uacbd\ud574\uc8fc\uc5b4, \ud14c\uc774\ube14 Migration \uc2dc, \ucf54\ub4dc \ubcc0\uacbd\uc744 \ucd5c\uc18c\ud654 \ud558\ub294 \ubc29\uc548\uc73c\ub85c \uc0ac\uc6a9\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},"@Slf4j\n@AllArgsConstructor\n@RequiredArgsConstructor\npublic abstract class BaseRepository<T extends Table, R extends Record> {\n\n  public final T TABLE;\n  protected final DSLContext writeContext;\n  protected final DSLContext readContext;\n\n  // ...\n}\n")),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"}," protected final DSLContext writeContext;"),"  ",Object(l.b)("inlineCode",{parentName:"p"},"protected final DSLContext readContext")," \uc740\n\ub370\uc774\ud130 \uc18c\uc2a4\ub97c Master \uc640 Slave \ub85c \ub098\ub258\uc5b4\uc838 \uc0ac\uc6a9\ud560 \uacbd\uc6b0, \uad6c\ubd84\ud558\uc5ec \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\ud558\ub098\uc758 \ub370\uc774\ud130\uc18c\uc2a4\ub9cc\uc744 \uc0ac\uc6a9\ud560 \ub550,\nbean \uc758 Qualify \ub85c writeContext, readContext \ubaa8\ub450 \uad6c\ud604\ud55c \ud6c4 \ub3d9\uc77c\ud55c \ub370\uc774\ud130\uc18c\uc2a4 \uc124\uc815\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\ud639\uc740 DSLContext \ub97c \ud558\ub098\ub9cc \ube48\uc73c\ub85c \ub4f1\ub85d\ud558\uba74 \ub429\ub2c8\ub2e4."),Object(l.b)("p",null,"\ud2b8\ub79c\uc7ad\uc158\uc744 bean \uc744 \uad6c\ud604\ud574, readContext \uc774\ub984\uc73c\ub85c \ube48\uc744 \uc8fc\uc785\ubc1b\uc544\ub3c4, \uc124\uc815\ud55c \ud2b8\ub79c\uc7ad\uc158 \ub9e4\ub2c8\uc800\ub85c Master \ub370\uc774\ud130 \uc18c\uc2a4\ub97c \uc0ac\uc6a9\ud560 \uc218\ub3c4 \uc788\uace0,\n\ubc18\ub300\ub85c\ub3c4 \uac00\ub2a5\ud569\ub2c8\ub2e4."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},"@Repository\npublic class TableDaoJooqImpl extends BaseRepository<JTable, JTableRecord>\n    implements TableDao {\n\n    public TableDaoJooqImpl( DSLContext writeContext, DSLContext readContext) {\n        super(JTable.TABLE, writeContext, readContext);\n    }\n}\n")),Object(l.b)("ol",{start:2},Object(l.b)("li",{parentName:"ol"},"BaseRepository \uc758 \uba54\uc11c\ub4dc\ub294 \ud655\uc7a5\ud558\ub294 \ud074\ub798\uc2a4\ub294 \uc911\ubcf5\uc801\uc73c\ub85c \uc791\uc131\ub418\ub294 java code \ub97c \uc904\uc600\uc2b5\ub2c8\ub2e4.\n\ub9e4\uac1c\ubcc0\uc218\uc640 \ubc18\ud658 \ud0c0\uc785\uc73c\ub85c, Pojo \uac1d\uccb4\ub098, Jooq \uac1d\uccb4\ub97c \uc0ac\uc6a9\ud558\ub3c4\ub85d \ud569\ub2c8\ub2e4.\n\ucd94\uc0c1\ud654 \ub418\uc5b4 \uc788\uae30 \ub54c\ubb38\uc5d0 \uc0ac\uc6a9\uc5d0 \ud56d\uc0c1 \uc8fc\uc758\ud574\uc57c \ud560 \uac83 \uac19\uc2b5\ub2c8\ub2e4.\n\uc124\uba85\uc774 \ub418\uc5b4 \uc788\uc9c0 \uc54a\uc740 \uc608\uc0c1\ub418\uc9c0 \uc54a\ub294 \ub3d9\uc791\uc774 \ubc1c\uc0dd\ud560 \uc218\ub3c4 \uc788\uae30 \ub54c\ubb38\uc5d0,\n\ub354 \uad6c\uccb4\uc801\uc778 \uc8fc\uc11d\uc774 \ud544\uc694\ud560 \uac83 \uac19\uc2b5\ub2c8\ub2e4.")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},'public abstract class BaseRepository<T extends Table, R extends Record> {\n\n  public final T TABLE;\n  protected final DSLContext writeContext;\n  protected final DSLContext readContext;\n\n  public void fetchSql(String sql) {\n    writeContext.fetch(sql);\n  }\n\n  public void deleteAll() {\n    writeContext.delete(TABLE).execute();\n  }\n\n  // \uc4f0\uc9c0\ub9d0\uac83! \ubc18\ub4dc\uc2dc \ud14c\uc2a4\ud2b8\uc5d0\uc11c\ub9cc \uc0ac\uc6a9\n  public void truncate() {\n    // writeContext.truncate(TABLE).execute();\n  }\n\n  @Deprecated\n  public Result<Record> convertListToResult(List<? extends Record> list) {\n    Result<Record> fetch = readContext.selectFrom(TABLE)\n      .limit(0)\n      .fetch();\n    fetch.addAll(list);\n    return fetch;\n  }\n\n  public <E> Result<Record> saveAll(List<E> list) {\n    List<Record> collect = list.stream()\n      .map(this::save)\n      .collect(Collectors.toList());\n    return convertListToResult(collect);\n  }\n\n  @SuppressWarnings("unchecked")\n  public void insertOnDuplicateKeyUpdate(R record) {\n    writeContext.insertInto(TABLE)\n      .set(record)\n      .onDuplicateKeyUpdate()\n      .set(record)\n      .execute();\n  }\n\n  //  pojo \uc758 null \uc778 \uac12\uc740 \uc5c5\ub370\uc774\ud2b8 \ub418\uc9c0 \uc54a\uac8c\ud568. pojo \ub85c Insert, Update Delete \ud560 \ub54c \uaf2d \uc0ac\uc6a9\ud574\uc57c\ud568.\n  public R newRecordIncludeNonNull(Object pojo) {\n    R newRecord = (R) readContext.newRecord(TABLE, pojo);\n    List<Field> fields = newRecord.fieldsRow().fieldStream()\n      .map(r -> TABLE.field(r.getName()))\n      .collect(Collectors.toList());\n\n    AtomicInteger i = new AtomicInteger(-1);\n    newRecord.valuesRow().fieldStream()\n      .forEach(a -> {\n        i.addAndGet(1);\n        if (Objects.equals(a.getName(), "null")) {\n          newRecord.changed(fields.get(i.get()), false);\n        }\n      });\n\n    return newRecord;\n  }\n\n  public R newRecord(Object pojo) {\n    return (R) readContext.newRecord(TABLE, pojo);\n  }\n\n  public <POJO> void insertOnDuplicateKeyUpdate(POJO pojo) {\n    R record = (R) writeContext.newRecord(TABLE, pojo);\n    insertOnDuplicateKeyUpdate(record);\n  }\n\n  public <POJO> void insertOnDuplicateKeyUpdate(POJO pojo) {\n    R record = (R) writeContext.newRecord(TABLE, pojo);\n    insertOnDuplicateKeyUpdate(record);\n  }\n\n  public InsertSetMoreStep<?> setInsertPrimaryKey(InsertSetStep<?> insertSetStep) {\n    return (InsertSetMoreStep<?>) insertSetStep;\n  }\n\n  @Deprecated // \ucf54\ub4dc\uac00 \ub108\ubb34 \ubcf5\uc7a1\ud574\uc9d0\n  public <E> Condition primaryCondition(E item) {\n    throw new AssertionError("override primaryCondition!");\n  }\n\n  @Deprecated\n  public int update(R item) {\n    return writeContext.update(TABLE)\n      .set(item)\n      .where(primaryCondition(item))\n      .execute();\n  }\n\n  public void update(List<R> item) {\n    for (R r : item) {\n      update(r);\n    }\n  }\n\n  /**\n   * @param item\n   * @param condition\n   * @return the number of updated records\n   */\n  public int update(R item, Condition condition) {\n    return writeContext.update(TABLE)\n      .set(item)\n      .where(condition)\n      .execute();\n  }\n\n  @Deprecated\n  public <E> Optional<Record> getByPrimaryCondition(\n    E item,\n    List<TableField<?, ?>> selectors\n  ) {\n    return readContext.select(selectors)\n      .from(TABLE)\n      .where(primaryCondition(item))\n      .fetchOptional();\n  }\n\n  @Deprecated\n  public Optional<R> getByPrimaryCondition(R item) {\n    return readContext.selectFrom(TABLE)\n      .where(primaryCondition(item))\n      .fetchOptional();\n  }\n\n  public List<Field<Object>> convertNamesToJooqFields(List<String> selectors) {\n    return selectors.stream().map(DSL::field)\n      .collect(Collectors.toList());\n  }\n\n  private SelectConditionStep<Record> addConditionToSelectStep(R record,\n    SelectConditionStep<Record> where) {\n    List<Object> values = new ArrayList<>(record.map(r -> r)\n      .intoMap()\n      .values());\n    Row fieldsRow = record.fieldsRow();\n    for (Object o : values) {\n      if (isNull(o)) {\n        continue;\n      }\n\n      int index = values.indexOf(o);\n      where = where.and(((Field<Object>) fieldsRow.field(index)).eq(o));\n    }\n    return where;\n  }\n\n  public SelectConditionStep<Record> findBySelectorAndPojo(\n    List<String> selectors,\n    Object pojo\n  ) {\n    List<Field<Object>> fields = convertNamesToJooqFields(selectors);\n    SelectConditionStep<Record> where = readContext.select(fields).from(TABLE)\n      .where();\n\n    return addConditionToSelectStep(newRecordIncludeNonNull(pojo), where);\n  }\n\n  public SelectConditionStep<Record> findByPojo(Object pojo) {\n    return addConditionToSelectStep(newRecordIncludeNonNull(pojo), readContext.selectFrom(TABLE).where());\n  }\n\n  Map<? extends Table<?>, List<TableField<?, ?>>> selectorsTableMapper(\n    List<TableField<?, ?>> selectors) {\n    return selectors.stream()\n      .collect(groupingBy(TableField::getTable));\n  }\n\n  static Map<Table, ? extends List<? extends Field<?>>> selectorsFieldTableMapper(\n    List<? extends Field<?>> selectors) {\n    return selectors.stream()\n      .collect(groupingBy(r -> ((TableField) r).getTable()));\n  }\n\n}\n')),Object(l.b)("h3",{id:"\uc608\uc81c"},"\uc608\uc81c"),Object(l.b)("h4",{id:"fetchstring-sql"},"fetch(String sql)"),Object(l.b)("p",null,"sql \ud30c\uc77c\uc744 \uc2e4\ud589\uc2dc\ud0ac \ub54c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},"public void fetchSql(String sql) {\n  writeContext.fetch(sql);\n}\n")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},'@Slf4j\n@RequiredArgsConstructor\n@Service\npublic class TestDBService {\n    private final ObjectMapper objectMapper;\n    private final Map<String, BaseRepository> baseRepositories;\n\n    @Transactional\n    public void init() throws IOException, SQLException {\n        clear(new ArrayList<>(baseRepositories.values()));\n        // readStub \ub294 sql \ud30c\uc77c\uc744 String \uc73c\ub85c \uc77d\uc5b4\uc624\ub294 \uba54\uc11c\ub4dc \uc785\ub2c8\ub2e4.\n        for (String sql : readStub(STUB_PATH + "insert-common-db.sql").split(";")) {\n            baseRepositories.get("tableDao").fetchSql(sql);\n        }\n    }\n}\n')),Object(l.b)("h4",{id:"delete-or-truncate"},"delete or truncate"),Object(l.b)("p",null,"\ub450 \uba54\uc11c\ub4dc\ub294 \ubc18\ub4dc\uc2dc \ud14c\uc2a4\ud2b8\ucf54\ub4dc\uc5d0\uc11c\ub9cc \uc0ac\uc6a9\ud560 \uc218 \uc788\uac8c \ud558\ub3c4\ub85d \uc8fc\uc758\ud574\uc57c \ud569\ub2c8\ub2e4."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},"public void deleteAll() {\n  writeContext.delete(TABLE).execute();\n}\n\npublic void truncate() {\n  writeContext.truncate(TABLE).execute();\n}\n")),Object(l.b)("p",null,"BaseRepository \ub97c \ud655\uc7a5\ud55c \ud14c\uc774\ube14\ub4e4\uc758 \ub808\ucf54\ub4dc\ub97c \ubaa8\ub450 \uc0ad\uc81c\ud569\ub2c8\ub2e4."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},'public void clear(List<BaseRepository> repositories) {\n    LinkedList<BaseRepository<?, ?>> q = new LinkedList(repositories);\n    int count = 0;\n\n    while (true) {\n        if (q.size() == 0 || count == 100) {\n            break;\n        }\n\n        BaseRepository el = null;\n        try {\n            el = q.remove();\n            el.deleteAll();\n        } catch (DataAccessException e) {\n            q.offer(el);\n        } catch (NoSuchElementException e) {\n            log.info("delete BaseRepository data finished! success");\n            break;\n        } catch (Exception e) {\n            log.info("delete BaseRepository data error!");\n            break;\n        } finally {\n            count++;\n        }\n    }\n}\n')),Object(l.b)("h4",{id:"convert-list-to-jooq-result-record"},"convert List to Jooq Result Record"),Object(l.b)("p",null,"\uc5b4\ub5a0\ud55c \uc0ac\uc815\uc73c\ub85c List \ub97c Result \ub9e4\uac1c\ubcc0\uc218 \uba54\uc11c\ub4dc\uc758 \uc778\uc790\ub85c \ub118\uaca8\uc57c \ud560 \ub54c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\uc4f0\uc9c0 \uc54a\ub294 \uac83\uc774 \uc88b\uc744 \uac83 \uac19\uc2b5\ub2c8\ub2e4. Mysql \uc744 \uc0ac\uc6a9\ud558\ub2e4\uac00, \ub2e4\ub978 \uc2a4\ud1a0\ub9ac\uc9c0\ub97c \uc0ac\uc6a9\ud574\uc57c \ud560 \ub54c Jooq \uac1d\uccb4\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\ub2e4\uba74\n\ucf54\ub4dc \uc804\ubc18\uc5d0 \ud769\uc5b4\uc9c4, jooq \uac1d\uccb4\ub97c input output \uc73c\ub85c \uc8fc\uace0\ubc1b\ub294 \ub2e4\uba74, \ucf54\ub4dc\ub97c \uc218\uc2b5\ud574\uc57c \ud560 \uc77c\uc774 \uc0dd\uae34\ub2e4\uba74 \uc5b4\ub5a1\ud574\uc57c \ud560\uae4c\uc694\nPojo \uac1d\uccb4\ub85c \uc8fc\uace0 \ubc1b\ub294\uac83\uc774 \uc774\ub85c\uc6b8 \uac83 \uac19\uc2b5\ub2c8\ub2e4."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},"@Deprecated\npublic Result<Record> convertListToResult(List<? extends Record> list) {\n  Result<Record> fetch = readContext.selectFrom(TABLE)\n    .limit(0)\n    .fetch();\n  fetch.addAll(list);\n  return fetch;\n}\n")),Object(l.b)("p",null,"\uc774 \uba54\uc11c\ub4dc\uc758 \uc7a5\uc810\uc774 \ud558\ub098 \uc788\uc2b5\ub2c8\ub2e4.\ntable1 \uacfc table2 \uac00 \uc788\uc744 \ub54c, \ub450 \ud14c\uc774\ube14\uc758 \uceec\ub7fc \uc2a4\ud0a4\ub9c8\uac00 \ub9e4\uc6b0 \uc720\uc0ac\ud569\ub2c8\ub2e4.\ntable1 \uc758 \ub808\ucf54\ub4dc\ub97c table2 \ub85c \uc800\uc7a5\ud558\ub294 \uac83\uc744 \uad6c\ud604\ud574\uc57c \ud560 \ub54c,\ntable1 \uc758 jooq \ub808\ucf54\ub4dc\ub97c \uac00\uc838\uc628 \ub2e4\uc74c ",Object(l.b)("inlineCode",{parentName:"p"},"into(TABLE2)")," \uba54\uc11c\ub4dc\ub97c \uc0ac\uc6a9\ud558\uba74 table2 \uac1d\uccb4\ub85c \ubcc0\ud658\uc774 \uc6a9\uc774\ud558\uae30 \ub54c\ubb38\uc5d0\ntable2 \uc5d0 \uc800\uc7a5\ud558\ub294 \uac83\uc774 \uac04\ud3b8\ud569\ub2c8\ub2e4.\n\ud558\uc9c0\ub9cc \uc911\uac04\uc5d0 table1 \ub808\ucf54\ub4dc\ub97c \uac00\uc838\uc628 \ub2e4\uc74c, jooq \uba54\uc11c\ub4dc\uc758 \ud55c\uacc4\ub85c list \ud0c0\uc785\uc744 \ubc18\ub4dc\uc2dc \uac70\uccd0\uc57c\ub9cc \ud55c\ub2e4\uba74,\nlist \ud0c0\uc785\uc758 table1 \uc694\uc18c\ub97c table2 \ub85c \ubcc0\ud658\ud558\ub294 \uac83\uc774 \ubc88\uac70\ub85c\uc6b8 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\uc774 \ub54c convertListToResult \ub97c \uc0ac\uc6a9\ud55c\ub2e4\uba74 jooq \uc758 result \ud0c0\uc785\uc73c\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uba54\uc11c\ub4dc \uc7a5\uc810\uc744 \ub204\ub9b4 \uc218 \uc788\uae30 \ub54c\ubb38\uc5d0 \ud3b8\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),Object(l.b)("p",null,"\ubc88\uac70\ub86d\ub354\ub77c\ub3c4 Pojo \ub97c \uc0ac\uc6a9\ud558\uba74 \ub354 \uc88b\uc744 \uac83 \uac19\uae30 \ub54c\ubb38\uc5d0 @Deprecated \ud558\uc5ec, \ucf54\ub4dc\ub97c \uc815\ub9ac\ud560 \uc608\uc815\uc785\ub2c8\ub2e4."),Object(l.b)("h4",{id:"save-\ud55c-\uacb0\uacfc\ub97c-\ub9ac\ud134"},"save \ud55c \uacb0\uacfc\ub97c \ub9ac\ud134"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"List<E>")," \uc758 E \ub294 \ud638\ucd9c\ub420 \ub54c JTableRecord \ud0c0\uc785 \uc774\uba70 Record \ud0c0\uc785\uc73c\ub85c \ubc18\ud658 \ud569\ub2c8\ub2e4."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},"public <E> Result<Record> saveAll(List<E> list) {\n  List<Record> collect = list.stream()\n    .map(this::save)\n    .collect(Collectors.toList());\n  return convertListToResult(collect);\n}\n")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},"public void saveAll(List<JTableRecord> list) {\n    tableDao.saveAll(list);\n}\n")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},"public <E> Record save(E item) {\n  UpdatableRecord<?> record = (UpdatableRecord<?>) writeContext.newRecord(TABLE, item);\n  record.store();\n  return record;\n}\n")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},"public JTableRecord insertNew() {\n    JTableRecord record  = new JTableRecord();\n    record.setA(a);\n    record.setB(b);\n    return save(record).into(TABLE);\n}\n")),Object(l.b)("h4",{id:"insertonduplicatekeyupdate"},"insertOnDuplicateKeyUpdate"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},'@SuppressWarnings("unchecked")\npublic void insertOnDuplicateKeyUpdate(R record) {\n  writeContext.insertInto(TABLE)\n    .set(record)\n    .onDuplicateKeyUpdate()\n    .set(record)\n    .execute();\n}\n\npublic void insertOnDuplicateKeyUpdate(Object pojo) {\n  writeContext.insertInto(writeContext.newRecord(TABLE, pojo))\n    .set(record)\n    .onDuplicateKeyUpdate()\n    .set(record)\n    .execute();\n}\n')),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},"@Override\npublic void insertOnDuplicateKeyUpdate(TablePojo tablePojo) {\n    super.insertOnDuplicateKeyUpdate(writeContext.newRecord(TABLE, tablePojo));\n}\n")),Object(l.b)("h4",{id:"pojo-\uac1d\uccb4\ub97c-jooq-\uac1d\uccb4\ub97c-\ub300\uc2e0\ud558\uc5ec-cud-\uc218\ud589\ud558\uae30-\uc704\ud55c-\uba54\uc11c\ub4dc"},"Pojo \uac1d\uccb4\ub97c Jooq \uac1d\uccb4\ub97c \ub300\uc2e0\ud558\uc5ec CUD \uc218\ud589\ud558\uae30 \uc704\ud55c \uba54\uc11c\ub4dc"),Object(l.b)("p",null,"Pojo \uac1d\uccb4\uc5d0 null \uc774 \uc544\ub2cc \uac12\ub4e4\ub9cc insert \ud558\uac70\ub098, update \ud558\uac70\ub098 delete \ub97c \ud558\uae30 \uc704\ud55c \uc870\uac74\uc73c\ub85c \uc9c0\uc815\ud558\uace0 \uc2f6\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\npojo \uac1d\uccb4\ub97c \ub3c4\uba54\uc778 \uac1d\uccb4\ub85c \ub798\ud551\ud558\uace0, \ub798\ud551\ud55c \uac1d\uccb4\ub97c ",Object(l.b)("inlineCode",{parentName:"p"},"new JTableRecord()")," \ud558\uc5ec \uc870\uac74\uc73c\ub85c \uc0ac\uc6a9\ud55c \uac12\ub4e4\uc758 setter \ub97c \ud638\ucd9c\ud560 \uc218\ub3c4 \uc788\uc9c0\ub9cc,\nPojo \uac1d\uccb4\ub97c \uadf8\ub300\ub85c \uc0ac\uc6a9\ud558\uace0 \uc2f6\uc744\uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \ud558\uc9c0\ub9cc Pojo \uac1d\uccb4\ub97c newRecord \ub97c \uc0ac\uc6a9\ud558\uc5ec \ubcc0\ud658\ud560 \uacbd\uc6b0, null \uc774\uc9c0\ub9cc\nTable \uc2a4\ud0a4\ub9c8\uc5d0 null \uc77c \uacbd\uc6b0 \uae30\ubcf8\uac12\uc774 \uc9c0\uc815\ub418\uc5b4 \uc788\uc744 \ub54c, Pojo \uac1d\uccb4\uc5d0 null \uc73c\ub85c \ub418\uc5b4 \uc788\uc9c0\ub9cc default \uac12\uc774 \uc790\ub3d9\uc73c\ub85c \uc138\ud305\ub429\ub2c8\ub2e4.\n\uc774\ub7f4 \ub54c default \uac12\uc774 \uc870\uac74\uc73c\ub85c \uc138\ud305\ub418\uc9c0 \uc54a\uae30 \uc704\ud574 \uba54\uc11c\ub4dc\ub97c \ub9cc\ub4e4\uc5c8\uc2b5\ub2c8\ub2e4."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},'public R newRecordIncludeNonNull(Object pojo) {\n  R newRecord = (R) readContext.newRecord(TABLE, pojo);\n  List<Field> fields = newRecord.fieldsRow().fieldStream()\n    .map(r -> TABLE.field(r.getName()))\n    .collect(Collectors.toList());\n\n  AtomicInteger i = new AtomicInteger(-1);\n  newRecord.valuesRow().fieldStream()\n    .forEach(a -> {\n      i.addAndGet(1);\n      if (Objects.equals(a.getName(), "null")) {\n        newRecord.changed(fields.get(i.get()), false);\n      }\n    });\n\n  return newRecord;\n}\n')),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},"public SelectConditionStep<Record> findBySelectorAndPojo(\n  List<String> selectors,\n  Object pojo\n) {\n  List<Field<Object>> fields = convertNamesToJooqFields(selectors);\n\n  SelectConditionStep<Record> where = readContext.select(fields).from(TABLE)\n    .where();\n\n  return addConditionToSelectStep(newRecordIncludeNonNull(pojo), where);\n}\n")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},"@Override\npublic int[] batchUpdate(List<TablePojo> tablePojo) {\n  return writeContext.batchUpdate(tablePojo.stream()\n    .map(this::newRecordIncludeNonNull)\n    .collect(Collectors.toList())\n  ).execute();\n}\n")),Object(l.b)("h4",{id:"pojo-\ub97c-jooq-\ub808\ucf54\ub4dc\ub85c-\ubcc0\ud658"},"Pojo \ub97c jooq \ub808\ucf54\ub4dc\ub85c \ubcc0\ud658"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},"public R newRecord(Object pojo) {\n  return (R) readContext.newRecord(TABLE, pojo);\n}\n")),Object(l.b)("h4",{id:"select-\ud560-\uceec\ub7fc\uc744-jooq-\ud544\ub4dc\uac00-\uc544\ub2cc-string-\uc73c\ub85c-\uc9c0\uc815\ud560-\ub54c"},"select \ud560 \uceec\ub7fc\uc744 Jooq \ud544\ub4dc\uac00 \uc544\ub2cc String \uc73c\ub85c \uc9c0\uc815\ud560 \ub54c,"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"List<String>")," \uc5d0\uc11c ",Object(l.b)("inlineCode",{parentName:"p"},"convertNamesToJooqFields")," \uba54\uc11c\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \ubcc0\ud658\ud558\uba74\nfields \uac00 Jooq \uc758 TableField \uac00 \uc544\ub2c8\uae30 \ub54c\ubb38\uc5d0 \uc81c\uc57d\uc774 \uc788\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},"public List<Field<Object>> convertNamesToJooqFields(List<String> selectors) {\n  return selectors.stream().map(DSL::field)\n    .collect(Collectors.toList());\n}\n\npublic SelectConditionStep<Record> findBySelectorAndPojo(\n  List<String> selectors,\n  Object pojo\n) {\n  List<Field<Object>> fields = convertNamesToJooqFields(selectors);\n  SelectConditionStep<Record> where = readContext.select(fields).from(TABLE)\n    .where();\n  return addConditionToSelectStep(newRecordIncludeNonNull(pojo), where);\n}\n")),Object(l.b)("h4",{id:"jooqrecord-\ub85c-condition-\ub9cc\ub4e4\uae30"},"JooqRecord \ub85c Condition \ub9cc\ub4e4\uae30"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"SelectConditionStep<Record> where")," \ub97c \ubc1b\uc9c0 \uc54a\uace0 Codition \uc744 \ubc18\ud658\ud574\ub3c4 \ub429\ub2c8\ub2e4."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},"  private SelectConditionStep<Record> addConditionToSelectStep(R record,\n    SelectConditionStep<Record> where) {\n    List<Object> values = new ArrayList<>(record.map(r -> r)\n      .intoMap()\n      .values());\n    Row fieldsRow = record.fieldsRow();\n    for (Object o : values) {\n      if (isNull(o)) {\n        continue;\n      }\n\n      int index = values.indexOf(o);\n      where = where.and(((Field<Object>) fieldsRow.field(index)).eq(o));\n    }\n    return where;\n  }\n")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},"public SelectConditionStep<Record> findByPojo(Object pojo) {\n  return addConditionToSelectStep(newRecordIncludeNonNull(pojo), readContext.selectFrom(TABLE).where());\n}\n")),Object(l.b)("h4",{id:"tablefield-\uc5d0\uc11c-\uc0ac\uc6a9\ub41c-table-\ucc3e\uae30"},"TableField \uc5d0\uc11c \uc0ac\uc6a9\ub41c Table \ucc3e\uae30"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"Map<? extends Table<?>, List<TableField<?, ?>>> selectorsTableMapper(\n  List<TableField<?, ?>> selectors) {\n  return selectors.stream()\n    .collect(groupingBy(TableField::getTable));\n}\n\nstatic Map<Table, ? extends List<? extends Field<?>>> selectorsFieldTableMapper(\n  List<? extends Field<?>> selectors) {\n  return selectors.stream()\n    .collect(groupingBy(r -> ((TableField) r).getTable()));\n}\n")),Object(l.b)("h2",{id:"selector-join-on-condition-\ub098\ub204\uae30"},"selector, join on, condition \ub098\ub204\uae30"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},"\n@Builder\n@RequiredArgsConstructor\n@AllArgsConstructor\npublic class BaseSelectBuilder {\n\n  private final Select query;\n  private Condition condition = DSL.and();\n  private List<Field> selectors;\n  private Map<Table, ? extends List<? extends Field>> selectorsTableMapper;\n  private Map<String, TableImpl> aliasMap = new WeakHashMap<>();\n  private BiConsumer<Query, Map<Table, ? extends List<? extends Field>>> joiner;\n\n  public SelectConditionStep<?> compose() {\n    this.selectors = query.getSelect();\n    this.selectorsTableMapper = selectorsFieldTableMapper();\n\n    if (!isNull(joiner)) {\n      joiner.accept(query, selectorsTableMapper);\n    }\n\n    return ((SelectJoinStep) query).where(condition);\n  }\n\n  public Map<Table, ? extends List<? extends Field>> selectorsFieldTableMapper() {\n    return selectors.stream()\n      .collect(groupingBy(r -> ((TableField)r).getTable()));\n  }\n\n}\n")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},"BaseSelectBuilder.builder()\n          .query(readContext.select(Arrays.asList(\n            TABLE.ID,\n            TABLE2.VALUE\n          )).from(TABLE))\n          .condition(Condition Object)\n          .joiner(TableDaoJooqImpl::joinBuilder)\n            .build()\n              .compose()\n                  .fetch()\n")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},"public static void joinBuilder(Query query, Map<Table, ? extends List<? extends Field>> selectorsTableMapper) {\n  if (!isNull(selectorsTableMapper.get(TABLE2))) {\n    query = ((SelectJoinStep) query)\n      .join(TABLE2)\n      .on(TABLE.ID.eq(TABLE2.TABLE_ID));\n  }\n}\n")),Object(l.b)("h2",{id:"\uc5ec\ub7ec-\ud14c\uc774\ube14\uc758-\uceec\ub7fc\uc744-\uac00\uc9c0\uace0-\uc788\ub294-record-\ub97c-pojo-\uac1d\uccb4\ub85c-\ubc14\uc778\ub529\ud558\uae30"},"\uc5ec\ub7ec \ud14c\uc774\ube14\uc758 \uceec\ub7fc\uc744 \uac00\uc9c0\uace0 \uc788\ub294 Record \ub97c Pojo \uac1d\uccb4\ub85c \ubc14\uc778\ub529\ud558\uae30"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},'@Slf4j\n@Builder\n@NoArgsConstructor\n@AllArgsConstructor\n@Getter\npublic class Table implements TablePojo {\n\n  @Column(table = TABLE_NAME, name = "id")\n  private Integer id;\n\n  private Table2 table2;\n\n  //...\n\n  public static ServicePage fromJooqRecord(Record record) {\n    JooqRecordMapper jooqRecordMapper = JooqRecordMapper.of(record);\n\n    if (!jooqRecordMapper.hasTable(Table.TABLE_NAME)) {\n      throw new EmptyResultDataAccessException(1);\n    }\n\n    Table table = record.into(TABLE).into(Table.class);\n\n    if (jooqRecordMapper.hasTable(Table2.TABLE_NAME)) {\n      table.table2 = Table2.fromJooqRecord(record);\n    }\n\n    return table;\n  }\n}\n\n\n```\n```java\n// Ambigous SQL Warning \ub97c \ud574\uacb0\ud558\uae30 \uc704\ud568. jooq 3.11 version \uc5d0\uc11c\ub294 \ud574\ub2f9 \uacbd\uace0\ub97c \uc124\uc815\uc744 \ud1b5\ud574 \uc5c6\uc568 \uc218 \uc5c6\uc74c. Info \ub85c\uadf8 \ub808\ubca8\uc5d0\uc11c\ub294 \ubb34\uc870\uac74 \ubc1c\uc0dd\n@RequiredArgsConstructor(staticName = "of")\npublic class JooqRecordMapper {\n\n  private final Map<String, String> jooqRecordMapper;\n\n  public static JooqRecordMapper of(Record record) {\n    Map<String, String> collect = Arrays.stream(record.fields())\n      .map(a -> a.getQualifiedName().getName()[0])\n      .collect(Collectors.toSet())\n        .stream().collect(Collectors.toMap(e -> e, e -> e));\n\n    return JooqRecordMapper.of(collect);\n  }\n\n  public boolean hasTable(String tableName) {\n    return !isNull(jooqRecordMapper.get(tableName.toLowerCase()));\n  }\n\n}\n\n```\n\n')))}d.isMDXComponent=!0},482:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return j}));var o=t(0),r=t.n(o);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},l=Object.keys(e);for(o=0;o<l.length;o++)t=l[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)t=l[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=r.a.createContext({}),d=function(e){var n=r.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},p=function(e){var n=d(e.components);return r.a.createElement(s.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},u=r.a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,l=e.originalType,a=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),p=d(t),u=o,j=p["".concat(a,".").concat(u)]||p[u]||b[u]||l;return t?r.a.createElement(j,c(c({ref:n},s),{},{components:t})):r.a.createElement(j,c({ref:n},s))}));function j(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var l=t.length,a=new Array(l);a[0]=u;var c={};for(var i in n)hasOwnProperty.call(n,i)&&(c[i]=n[i]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var s=2;s<l;s++)a[s]=t[s];return r.a.createElement.apply(null,a)}return r.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"}}]);