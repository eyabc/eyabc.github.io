(window.webpackJsonp=window.webpackJsonp||[]).push([[196],{266:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return l}));var r=n(3),o=n(7),s=(n(0),n(441)),a={},i={unversionedId:"nest-js/overview/exception-filters",id:"nest-js/overview/exception-filters",isDocsHomePage:!1,title:"exception-filters",description:"https://docs.nestjs.com/exception-filters",source:"@site/docs/nest-js/overview/exception-filters.mdx",slug:"/nest-js/overview/exception-filters",permalink:"/docs/nest-js/overview/exception-filters",version:"current",sidebar:"nestJs",previous:{title:"middleware",permalink:"/docs/nest-js/overview/middleware"}},c=[{value:"Exception Layer",id:"exception-layer",children:[]},{value:"global exception filter \uc804\uc5ed \uc608\uc678 \ud544\ud130",id:"global-exception-filter-\uc804\uc5ed-\uc608\uc678-\ud544\ud130",children:[]},{value:"HttpException",id:"httpexception",children:[]},{value:"\ud45c\uc900 \uc5d0\ub7ec \ub358\uc9c0\uae30",id:"\ud45c\uc900-\uc5d0\ub7ec-\ub358\uc9c0\uae30",children:[]}],p={toc:c};function l(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(s.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(s.b)("p",null,Object(s.b)("a",{parentName:"p",href:"https://docs.nestjs.com/exception-filters"},"https://docs.nestjs.com/exception-filters")),Object(s.b)("p",null,"Nest \ub294 ",Object(s.b)("ins",null,"Exception Layer")," \ub97c \uac00\uc9d1\ub2c8\ub2e4."),Object(s.b)("h2",{id:"exception-layer"},"Exception Layer"),Object(s.b)("p",null,"\uc571\uc73c\ub85c \ubd80\ud130 \ucc98\ub9ac\ub418\uc9c0 \uc54a\uc740 \ubaa8\ub4e0 \uc608\uc678\ub97c \ucc98\ub9ac\ud558\uc5ec"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},"\uc0ac\uc6a9\uc790 \uce5c\ud654\uc801\uc778 \uc751\ub2f5\uc73c\ub85c \ub0b4\ubcf4\ub0b8\ub2e4.")),Object(s.b)("h2",{id:"global-exception-filter-\uc804\uc5ed-\uc608\uc678-\ud544\ud130"},"global exception filter \uc804\uc5ed \uc608\uc678 \ud544\ud130"),Object(s.b)("p",null,Object(s.b)("inlineCode",{parentName:"p"},"HttpException")," \uc640 \ud558\uc704 \ud074\ub798\uc2a4\uc758 \uc608\uc678\ub97c \ucc98\ub9ac\ud55c\ub2e4."),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("p",{parentName:"li"},"\uc774 \uc678 \uc608\uc678\ub294 exception filter \uac00 \uae30\ubcf8 JSON \uc751\ub2f5\uc744 \uc0dd\uc131\ud55c\ub2e4."),Object(s.b)("pre",{parentName:"li"},Object(s.b)("code",{parentName:"pre",className:"language-json"},'{\n  "statusCode": 500,\n  "message": "Internal server error"\n}\n'))),Object(s.b)("li",{parentName:"ul"},Object(s.b)("p",{parentName:"li"},"global exception filter \ub294 \ubd80\ubd84\uc801\uc73c\ub85c http-error \ub97c \uc9c0\uc6d0\ud558\ub294 \ub77c\uc774\ube0c\ub7ec\ub9ac \uc774\ub2e4."),Object(s.b)("ul",{parentName:"li"},Object(s.b)("li",{parentName:"ul"},"statusCode \uc640 message \ud504\ub85c\ud37c\ud2f0\ub97c \uac00\uc9c0\ub294 \uc608\uc678\ub77c\uba74 \uc801\uc808\ud55c \uc751\ub2f5\uc744 \ubc18\ud658\ud55c\ub2e4."),Object(s.b)("li",{parentName:"ul"},"(instead of the default InternalServerErrorException for unrecognized exceptions).")))),Object(s.b)("h2",{id:"httpexception"},"HttpException"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-typescript"},"/**\n * Defines the base Nest HTTP exception, which is handled by the default\n * Exceptions Handler.\n *\n * @see [Base Exceptions](https://docs.nestjs.com/exception-filters#base-exceptions)\n *\n * @publicApi\n */\nexport declare class HttpException extends Error {\n    private readonly response;\n    private readonly status;\n    /**\n     * Instantiate a plain HTTP Exception.\n     *\n     * @example\n     * `throw new HttpException()`\n     *\n     * @usageNotes\n     * The constructor arguments define the response and the HTTP response status code.\n     * - The `response` argument (required) defines the JSON response body.\n     * - The `status` argument (required) defines the HTTP Status Code.\n     *\n     * By default, the JSON response body contains two properties:\n     * - `statusCode`: the Http Status Code.\n     * - `message`: a short description of the HTTP error by default; override this\n     * by supplying a string in the `response` parameter.\n     *\n     * To override the entire JSON response body, pass an object to the `createBody`\n     * method. Nest will serialize the object and return it as the JSON response body.\n     *\n     * The `status` argument is required, and should be a valid HTTP status code.\n     * Best practice is to use the `HttpStatus` enum imported from `nestjs/common`.\n     *\n     * @param response string or object describing the error condition.\n     * @param status HTTP response status code.\n     */\n    constructor(response: string | Record<string, any>, status: number);\n    initMessage(): void;\n    initName(): void;\n    getResponse(): string | object;\n    getStatus(): number;\n    static createBody(objectOrError: object | string, description?: string, statusCode?: number): object;\n}\n\n")),Object(s.b)("h2",{id:"\ud45c\uc900-\uc5d0\ub7ec-\ub358\uc9c0\uae30"},"\ud45c\uc900 \uc5d0\ub7ec \ub358\uc9c0\uae30"),Object(s.b)("p",null,"Nest \uc758 \ub0b4\uc7a5 ",Object(s.b)("inlineCode",{parentName:"p"},"HttpException")," \ud074\ub798\uc2a4"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},"HTTP REST/GraphQL API \uae30\ubc18 \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\uc11c, \ud2b9\uc815 \uc5d0\ub7ec\uac00 \ubc1c\uc0dd\ud588\uc744 \ub54c HTTP \ud45c\uc900 \uc751\ub2f5\uc744 \uc8fc\ub294 \uac83\uc774 Best Practice \uc774\ub2e4.")),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-typescript",metastring:'title="cats.controller.ts"',title:'"cats.controller.ts"'},"@Get()\nasync findAll() {\n  throw new HttpException('Forbidden', HttpStatus.FORBIDDEN);\n}\n")),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-json",metastring:'title="for client response"',title:'"for',client:!0,'response"':!0},'{\n  "statusCode": 403,\n  "message": "Forbidden"\n}\n')))}l.isMDXComponent=!0},441:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var r=n(0),o=n.n(r);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=o.a.createContext({}),l=function(e){var t=o.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return o.a.createElement(p.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,a=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(n),d=r,m=u["".concat(a,".").concat(d)]||u[d]||b[d]||s;return n?o.a.createElement(m,i(i({ref:t},p),{},{components:n})):o.a.createElement(m,i({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,a=new Array(s);a[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,a[1]=i;for(var p=2;p<s;p++)a[p]=n[p];return o.a.createElement.apply(null,a)}return o.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);